@using SdojWeb.Models
@model QuestionDetailModel
@{
    var cls = ViewData["FullScreen"] != null ? "" : "col-xs-6";
}

<div class="text-center">
    <table class="table table-condensed center-header">
        <thead>
            <tr>
                @*<th>@Html.DisplayNameFor(x => x.QuestionType)</th>*@
                <th>@Html.DisplayNameFor(model => model.MemoryLimitMb)</th>
                <th>@Html.DisplayNameFor(model => model.TimeLimit)</th>
                @if (Model.QuestionType == SdojWeb.Models.DbModels.QuestionTypes.Process2Drive)
                {
                    <th>@Html.DisplayNameFor(x => x.RunTimes)</th>
                }
                <th>@Html.DisplayNameFor(model => model.AcceptedCount)</th>
                <th>通过率</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                @*<td>@Html.DisplayFor(model => model.QuestionType)</td>*@
                <td>@Html.DisplayFor(model => model.MemoryLimitMb)</td>
                <td>@Html.DisplayFor(model => model.TimeLimit)</td>
                @if (Model.QuestionType == SdojWeb.Models.DbModels.QuestionTypes.Process2Drive)
                {
                    <td>@Html.DisplayFor(x => x.RunTimes)</td>
                }
                <td>@Model.AcceptedCount / @Model.SolutionCount</td>
                <td>@((1.0 * Model.AcceptedCount / (Model.SolutionCount + Double.Epsilon)).ToString("P2"))</td>
            </tr>
        </tbody>
    </table>
</div>
<hr />
<h4>@Html.DisplayNameFor(model => model.Description)</h4>
<div class="well markdown">@Html.DisplayFor(model => model.Description)</div>
<div class="row">
    @if (Model.InputExplain != null || Model.OutputExplain != null)
    {
        <div class="col-xs-12 @cls">
            <h4>@Html.DisplayNameFor(x => x.InputExplain)</h4>
            <div class="well markdown">@Html.DisplayFor(x => x.InputExplain)</div>
        </div>

        <div class="col-xs-12 @cls">
            <h4>@Html.DisplayNameFor(x => x.OutputExplain)</h4>
            <div class="well markdown">@Html.DisplayFor(x => x.OutputExplain)</div>
        </div>
    }
</div>
@for (var i = 0; i < Model.Samples.Count; ++i)
{
    var sample = Model.Samples[i];
    var id = Model.Samples.Count > 1 ? (i + 1).ToString() : "";
    if (string.IsNullOrEmpty(sample.Input))
    {
        <div class="row">
            <div class="col-xs-12">
                <h4>@Html.DisplayNameFor(model => sample.Output) @id</h4>
                <div class="well">@Html.DisplayFor(model => sample.Output)</div>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-xs-12 @cls">
                <h4>@Html.DisplayNameFor(model => sample.Input) @id</h4>
                <div class="well">@Html.DisplayFor(model => sample.Input)</div>
            </div>
            <div class="col-xs-12 @cls">
                <h4>@Html.DisplayNameFor(model => sample.Output) @id</h4>
                <div class="well">@Html.DisplayFor(model => sample.Output)</div>
            </div>
        </div>
    }
}