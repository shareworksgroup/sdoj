@using SdojWeb.Infrastructure.Identity
@using SdojWeb.Models
@model QuestionDetailModel
@{
    ViewBag.Title = Model.Name;
}
<h2 class="text-center">@ViewBag.Title</h2>
<div class="text-center">
    <strong>@Html.DisplayNameFor(model => model.MemoryLimitMb):</strong>
    @Html.DisplayFor(model => model.MemoryLimitMb)
    <strong>@Html.DisplayNameFor(model => model.TimeLimit):</strong>
    @Html.DisplayFor(model => model.TimeLimit)
</div>

<hr />

<h4>@Html.DisplayNameFor(model => model.Description)</h4>
<div class="well">@Html.DisplayFor(model => model.Description)</div>

<div class="row">
    @if (Model.InputExplain != null || Model.OutputExplain != null)
    {
        <div class="col-xs-12 col-sm-6">
            <h4>@Html.DisplayNameFor(x => x.InputExplain)</h4>
            <div class="well">@Html.DisplayFor(x => x.InputExplain)</div>
        </div>

        <div class="col-xs-12 col-sm-6">
            <h4>@Html.DisplayNameFor(x => x.OutputExplain)</h4>
            <div class="well">@Html.DisplayFor(x => x.OutputExplain)</div>
        </div>
    }
</div>

@if (string.IsNullOrEmpty(Model.SampleInput))
{
    <div class="row">
        <div class="col-xs-12">
            <h4>@Html.DisplayNameFor(model => model.SampleOutput)</h4>
            <div class="well">@Html.DisplayFor(model => model.SampleOutput)</div>
        </div>
    </div>
}
else
{
    <div class="row">
        <div class="col-xs-12 col-sm-6">
            <h4>@Html.DisplayNameFor(model => model.SampleInput)</h4>
            <div class="well">@Html.DisplayFor(model => model.SampleInput)</div>
        </div>
        <div class="col-xs-12 col-sm-6">
            <h4>@Html.DisplayNameFor(model => model.SampleOutput)</h4>
            <div class="well">@Html.DisplayFor(model => model.SampleOutput)</div>
        </div>
    </div>
}


<div class="clearfix">
    <a class="btn btn-primary" href="@Url.Action("Create", "Solution", new {id=Model.Id,name=Model.Name})">
        <i class="glyphicon glyphicon-plus-sign"></i>
        解答
    </a>
    <div class="pull-right">
        @if (User.IsUserOrRole(Model.CreateUserId, SystemRoles.QuestionAdmin))
        {
            <a class="btn btn-success" href="@Url.Action("Edit", new {id=Model.Id})">
                <i class="glyphicon glyphicon-edit"></i>
                编辑
            </a>
            <button type="button" class="btn btn-warning" onclick="rejudge(@Model.Id)">
                <i class="glyphicon glyphicon-repeat"></i>
                重新评测
            </button>
            <button type="button" class="btn btn-danger" onclick="deleteMe(@Model.Id)">
                <i class="glyphicon glyphicon-remove"></i>
                删除
            </button>
        }
        <a class="btn btn-default" href="@Url.Action("Data", new {id=Model.Id})">
            <i class="glyphicon glyphicon-file"></i>
            测试数据
        </a>
    </div>
</div>

<hr/>
@Html.ActionLink("返回列表", "Index")

<div class="pull-right clearfix">
    @Html.ActionLink("查看通过解答", "Index", "Solution", new {question=Model.Name, state = SolutionState.Accepted}, null) |
    @Html.ActionLink("查看所有解答", "Index", "Solution", new {question=Model.Name}, null)
</div>


@using (Html.BeginForm("Delete", "Question", FormMethod.Post, new { id = "delete-form" }))
{
    @Html.AntiForgeryToken()
    <input type="hidden" name="id" />
}
@using (Html.BeginForm("Rejudge", "Question", FormMethod.Post, new { id = "rejudge-form" }))
{
    @Html.AntiForgeryToken()
    <input type="hidden" name="id" />
}
@section scripts
{
    <script>
        function deleteMe(id) {
            if (confirm('确定要删除此题目吗？')) {
                $("#delete-form input[name='id']").val(id);
                $("#delete-form").submit();
            }
        }

        function rejudge(id) {
            if (confirm('确定要重新评测此题目吗？')) {
                $("#rejudge-form input[name='id']").val(id);
                $("#rejudge-form").submit();
            }
        }
    </script>
}
