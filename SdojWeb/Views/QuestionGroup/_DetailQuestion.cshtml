@using SdojWeb.Models
@using PagedList.Mvc
@using SdojWeb.Infrastructure.Extensions
@model IEnumerable<QuestionGroupDetailItemModel>
@{
    var paged = (SortablePagedList<QuestionGroupDetailItemModel>)Model;
    var route = (RouteValueDictionary)ViewData["QuestionItemRoute"];
}

<form class="search-form">
    <div class="col-xs-12 col-sm-6 col-md-4 col-lg-3">
        <select class="form-control input-sm" data-value="@route["passed"]" name="passed">
            <option value="">所有...</option>
            <option value="True">通过</option>
            <option value="False">未通过</option>
        </select>
    </div>
    <div class="col-xs-12 col-sm-6 col-md-4 col-lg-3">
        <button type="submit" class="btn btn-default btn-sm">过滤</button>
    </div>
</form>

<div class="col-xs-12">
    <div class="table-responsive">
        <table class="table table-bordered table-condensed table-hover table-striped">
            <thead>
                <tr>
                    @if (User.Identity.IsAuthenticated)
                    {
                        <th>
                            @Html.DisplayNameFor(x => x.Question.Complished)
                        </th>
                    }
                    <th>
                        @Html.DisplayNameFor(x => x.Alias)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Question.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Question.Creator)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Question.MemoryLimitMb)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Question.TimeLimit)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Question.DataCount)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Question.SolutionCount)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Question.UpdateTime)
                    </th>
                </tr>
            </thead>

            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        @if (User.Identity.IsAuthenticated)
                        {
                            <td>
                                @if (item.Question.Started)
                                {
                                    if (item.Question.Complished)
                                    {
                                        <span class="text-success">
                                            <i class="glyphicon glyphicon-ok">
                                            </i>
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-warning">
                                            <i class="glyphicon glyphicon-arrow-right">
                                            </i>
                                        </span>
                                    }
                                }
                            </td>
                        }
                        <td>
                            @Html.DisplayFor(modelItem => item.Alias)
                        </td>
                        <td>
                            @Html.ActionLink(item.Question.Name, "Details", "Question", new { id = item.Question.Id }, null)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Question.Creator)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Question.MemoryLimitMb)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Question.TimeLimit)
                        </td>
                        <td>
                            <a href="@Url.Action("Data", "Question", new {id=item.Question.Id}, null)">
                                @Html.DisplayFor(x => item.Question.DataCount)
                            </a>
                        </td>
                        <td>
                            @Html.ActionLink(item.Question.AcceptedCount.ToString(), "Index", "Solution", new { question = item.Question.Name, state = SolutionState.Accepted }, null)
                            /
                            @Html.ActionLink(item.Question.SolutionCount.ToString(), "Index", "Solution", new { question = item.Question.Name }, null)
                        </td>
                        <td>
                            <a href="@Url.Action("Edit", "Question", new {id=item.Question.Id})">
                                @Html.DisplayFor(modelItem => item.Question.UpdateTime)
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="col-xs-6">
        第 @paged.PageNumber 页，共 @paged.PageCount 页
    </div>
    <div class="col-xs-6">
        <div class="pull-right">
            @Html.PagedListPager(paged, page => Url.Action("Details", route.CopySetPaged(page, paged.OrderBy, paged.Asc)))
        </div>
    </div>

</div>