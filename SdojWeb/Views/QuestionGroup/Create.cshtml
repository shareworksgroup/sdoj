@model SdojWeb.Models.QuestionGroupEditModel
@{
    ViewBag.Title = "新题目组";
}
<h2>@ViewBag.Title</h2>
<div class="form-horizontal">
    <h4></h4>
    <hr />
    <form id="main-form">
        @Html.AntiForgeryToken()
        @Html.EditorForModel()
    </form>
    <form id="question-group-form">
        <div class="row">
            <label class="col-md-2 control-label">题目组</label>
            <div class="col-md-10">
                <div class="table-responsive">
                    <table class="table table-bordered table-condensed table-hover table-striped">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>题目名</th>
                                <th>作者</th>
                                <th>别名</th>
                                <th>顺序</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody data-bind="foreach: items">
                            <tr>
                                <td data-bind="text: questionId"></td>
                                <td>
                                    <span data-bind="text: name"></span>
                                </td>
                                <td>
                                    <span data-bind="text: author"></span>
                                </td>
                                <td>
                                    <input name="alias" class="form-control input-sm" data-bind="value: alias, attr: {'name': 'alias-' + $data.questionId}"
                                           type="text" maxlength="20" />
                                </td>
                                <td>
                                    <input name="order" class="form-control input-sm" data-bind="value: order, attr: {'name': 'order-' + $data.questionId}"
                                           type="number" data-rule-required="true" data-rule-number="true" />
                                </td>
                                <td>
                                    <button data-bind="click: $parent.remove_question_item.bind($parent, $data)"
                                            class="btn btn-warning btn-xs btn-block text-center" type="button">
                                        <i class="glyphicon glyphicon-remove"></i>
                                        删除
                                    </button>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </form>
    <div class="form-group">
        <label class="col-md-2 control-label">题目列表</label>
        <div class="col-md-10">
            <form class="search-form" 
                  data-ajax="true" data-ajax-url="@Url.Action("Question")" data-ajax-method="POST" data-ajax-mode="replace"
                  data-ajax-update="#question-table" data-ajax-success="on_question_page_loaded()">
                @Html.AntiForgeryToken()
                <div class="col-xs-12 col-sm-6 col-md-4 col-lg-3">
                    @Html.TextBox("name", "", new { @class = "form-control input-sm", placeholder = "标题..." })
                </div>
                <div class="col-xs-12 col-sm-6 col-md-4 col-lg-3">
                    @Html.TextBox("creator", "", new { @class = "form-control input-sm", placeholder = "作者..." })
                </div>
                <div class="col-xs-12 col-sm-6 col-md-4 col-lg-3">
                    <button class="btn btn-default btn-sm" type="submit">过滤</button>
                </div>
            </form>
        </div>
        <div class="col-md-offset-2 col-md-10">
            <div class="row" id="question-table">
                @Html.Partial("_Question", ViewData["Question"], ViewData)
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="button" value="创建" data-bind="click: save" class="btn btn-default" />
        </div>
    </div>

</div>
<div>
    @Html.ActionLink("返回列表", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/ko")
    @Scripts.Render("~/bundles/jqueryajax")
    <script>
        function ViewModel() {
            var self = this;
            var prototype = ViewModel.prototype;

            this.items = ko.observableArray([]);

            prototype.save = function () {
                var $form1 = $("#main-form");
                var $form2 = $("#question-group-form");
                if ($form1.valid() && $form2.valid()) {
                    var data = {};
                    $form1.serializeArray().map(function (x) { data[x.name] = x.value });
                    data['questions'] = ko.toJS(self.items());

                    $.ajax('@Url.Action("Create")', {
                        type: "POST", 
                        data: data,
                        tranditional: true, 
                        success: function () {
                            alert('success');
                        }
                    });
                }
            }

            prototype.remove_question_item = function (item) {
                this.items.remove(item);
                refresh_question_list();
            }
        }

        function QuestionItem() {
            var self = this;

            this.id = null;
            this.questionId = null;
            this.name = "";
            this.author = "";
            this.alias = ko.observable("");
            this.order = ko.observable(0);
        }

        function add_question_item() {
            var that = $(this);

            var id = that.data('id');
            var name = that.data('name');
            var author = that.data('creator');

            var item = new QuestionItem();
            item.questionId = id;
            item.name = name;
            item.author = author;

            vm.items.push(item);
            refresh_question_list();
        }

        function refresh_question_list() {
            var ids = ko.utils.arrayMap(vm.items(), function (item) {
                return item.questionId;
            });

            $(".add-question-button").each(function (id, element) {
                var that = $(element);
                var thatId = that.data('id');

                if (ids.indexOf(thatId) !== -1) {
                    $(element).hide();
                } else {
                    $(element).show();
                }
            });
        }

        function on_question_page_loaded() {
            refresh_question_list();
        }

        var vm = new ViewModel();
        ko.applyBindings(vm);
    </script>
}
