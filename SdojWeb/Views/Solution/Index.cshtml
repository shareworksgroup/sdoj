@using System.Security.Principal
@using PagedList.Mvc
@using SdojWeb.Infrastructure.Extensions
@using SdojWeb.Infrastructure.Identity
@using SdojWeb.Models
@model IEnumerable<SolutionSummaryModel>
@{
    ViewBag.Title = "解答列表";

    Func<int, int, bool> checkAccess = (authorId, questionCreatorId) =>
    {
        IPrincipal user = User;
        IIdentity identity = user.Identity;
        int userId = identity.GetIntUserId();

        if (userId == authorId ||
            userId == questionCreatorId ||
            user.IsInRole(SystemRoles.QuestionAdmin))
        {
            return true;
        }
        return false;
    };

    var paged = Model as SortablePagedList<SolutionSummaryModel>;
    var route = (RouteValueDictionary) ViewBag.Route;
    var thb = paged.GetThBuilder(Html, "Index", route);

}
<h2>@ViewBag.Title</h2>
<form class="search-form">
    @if (User.Identity.IsAuthenticated)
    {
        <div class="col-xs-12 col-sm-6 col-md-4 col-lg-3">
            <select class="form-control input-sm" data-bind="value: onlyMe" name="onlyMe">
                <option value="">所有解答...</option>
                <option value="True">仅看我的解答</option>
            </select>
        </div>
    }
    <div class="col-xs-12 col-sm-6 col-md-4 col-lg-3">
        @Html.TextBox("username", route["username"], new {@class = "form-control input-sm", placeholder = "用户名..."})
    </div>
    <div class="col-xs-12 col-sm-6 col-md-4 col-lg-3">
        @Html.TextBox("question", route["question"], new {@class = "form-control input-sm", placeholder = "题目名..."})
    </div>
    <div class="col-xs-12 col-sm-6 col-md-4 col-lg-3">
        @Html.EnumDropDownList("language", (Languages?)route["language"], "语言...", new { @class = "form-control input-sm" })
    </div>
    <div class="col-xs-12 col-sm-6 col-md-4 col-lg-3">
        @Html.EnumDropDownList("state", (SolutionState?)route["state"], "状态...", new { @class="form-control input-sm"})
    </div>
    <div class="col-xs-12 col-sm-6 col-md-4 col-lg-3">
        <button type="submit" class="btn btn-default btn-sm">过滤</button>
    </div>
</form>
<div class="table-responsive">
    <table class="table table-hover table-striped table-bordered table-condensed">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.CreateUserName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.QuestionName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Language)
                </th>
                <th>
                    @thb.BuildA(x => x.SourceLength)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.State)
                </th>
                <th>
                    @thb.BuildA(x => x.RunTime)
                </th>
                <th>
                    @thb.BuildA(x => x.UsingMemoryMb)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SubmitTime)
                </th>
                <th colspan="2">操作</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreateUserName)
                    </td>
                    <td>
                        @Html.ActionLink(item.QuestionName, "Details", "Question", new {id = item.QuestionId}, null)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Language)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SourceLength)
                    </td>
                    <td id="state-@item.Id">
                        @Html.DisplayFor(modelItem => item.State)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RunTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UsingMemoryMb)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SubmitTime)
                    </td>
                    @if (checkAccess(item.CreateUserId, item.QuestionCreateUserId))
                    {
                        <td>
                            <a class="btn btn-primary btn-xs btn-block"
                               href="@Url.Action("Details", new {id = item.Id})">
                                <i class="glyphicon glyphicon-file"></i>
                                源码
                            </a>
                        </td>
                        <td>
                            <button class="btn btn-danger btn-xs btn-block " onclick="deleteMe(@item.Id)">
                                <i class="glyphicon glyphicon-remove"></i>
                                删除
                            </button>
                        </td>
                    }
                    else
                    {
                        <td></td>
                        <td></td>
                    }

                </tr>
            }
        </tbody>
    </table>
</div>

<div class="row">
    <div class="col-xs-6">
        第 @paged.PageNumber 页，共 @paged.PageCount 页
    </div>
    <div class="col-xs-6">
        <div class="pull-right">
            @Html.PagedListPager(paged, page => Url.Action("Index", route.CopySetPaged(page, paged.OrderBy, paged.Asc)))
        </div>
    </div>
</div>
@using (Html.BeginForm("Delete", "Solution", FormMethod.Post, new { id = "delete-form" }))
{
    @Html.AntiForgeryToken()
    <input type="hidden" name="id" />
}
@section scripts
{
    @Scripts.Render("~/bundles/signalr")
    <script src="~/signalr/hubs"></script>
    @Scripts.Render("~/bundles/ko")
    <script>

        function deleteMe(id) {
            if (confirm('确定要删除此解答吗？')) {
                $("#delete-form input[name='id']").val(id);
                $("#delete-form").submit();
            }
        }

        var shub = $.connection.solutionHub;
        shub.client.push = function(id, name) {
            $("#state-" + id).text(name);
        };
        $.connection.hub.start();

        var vm = {
            onlyMe: '@route["onlyMe"]'
        };
        ko.applyBindings(vm);
    </script>
}
